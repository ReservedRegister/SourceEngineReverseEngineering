name: build

on: [push]

jobs:
  build:
    runs-on: ubuntu-20.04
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}      
    steps:
      - name: Prepare env
        shell: bash
        run: |
          echo "GITHUB_SHA_SHORT=${GITHUB_SHA::7}" >> $GITHUB_ENV
          
      - name: Install packages
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y clang g++-multilib
          echo "CC=clang" >> $GITHUB_ENV
          echo "CXX=clang++" >> $GITHUB_ENV
          
      - name: Setup sourcemod & HL2SDK
        run: |
          git clone --recursive https://github.com/alliedmodders/sourcemod
          bash sourcemod/tools/checkout-deps.sh
          
      - name: Setting up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Getting ambuild
        run: |
          python -m pip install wheel
          pip install git+https://github.com/alliedmodders/ambuild
          
      - name: Getting own repository
        uses: actions/checkout@v4
        with:
          path: extension
          
      - name: Compiling ${{ github.event.repository.name }} files
        working-directory: extension
        run: |
          mkdir build
          cd build
          python ../configure.py
          ambuild
          
      - name: Uploading package
        uses: actions/upload-artifact@v4
        with:
          name: server_utils
          path: extension/build/package
          
      - name: Archive production artifacts
        run: |
          mkdir -p release
          cp -r extension/build/package/* release/
          cd release
          zip -r release.zip ./*
        shell: bash
        
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Bump version and push tag
        id: tag_version
        uses: anothrNick/github-tag-action@1.38.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_prefix: "v"
          default_bump: "patch" # Can be 'patch', 'minor', or 'major'
          # pre_release: true # Optional, uncomment for pre-releases
          # release_branches: "main" # Optional, specify branches to create releases

      - name: Get latest tag
        id: get_latest_tag
        run: echo "::set-output name=TAG::${{ steps.tag_version.outputs.new_tag }}"

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_latest_tag.outputs.TAG }}
          files: release/release.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
